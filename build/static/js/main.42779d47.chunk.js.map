{"version":3,"sources":["services/LintuService.js","components/Togglable.js","components/Havainto.js","services/login.js","components/Linnut.js","App.js","index.js"],"names":["havaintoUrl","lintuUrl","userUrl","token","getWikiHaku","haku","a","axios","get","response","data","getAll","then","getHavainto","getLintu","getUser","createUser","newObject","post","createHavainto","config","headers","Authorization","createLintu","updateHavainto","id","put","removeHavainto","delete","setToken","newToken","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","children","className","onClick","buttonLabel","Havainto","user","changeHavainto","havaintoList","deleteHavainto","printHavainto","changedmaara","handleUpdateMaaraChange","changedkunta","handleUpdateKuntaChange","changedpaikka","handleUpdatePaikkaChange","changedlisatiedot","handleUpdateTiedotChange","map","havainto","listStyleType","laji","maara","kunta","paikka","lisatiedot","username","value","onChange","type","login","credentials","Linnut","lintuList","birdCard","lintu","tieteellinenNimi","src","kuvaWikipediastaAPI","alt","lahko","heimo","suku","elinvoimaisuus","i","App","setHavaintoList","setLintuList","userList","setUserList","setLaji","setMaara","setKunta","setPaikka","setLisatiedot","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","setUser","setChangedMaara","setChangedKunta","setChangedPaikka","setChangedLisatiedot","wikiData","setWikiData","useEffect","LintuService","initialHavainnot","initialLinnut","initialUsers","loggedUserJSON","window","localStorage","getItem","JSON","parse","returnedData","catch","error","alert","console","log","addHavainto","event","preventDefault","some","toLowerCase","taxonomyData","cirrusdoc","source","auxiliary_text","undefined","lahkopalat","split","includes","luokituspalat","luokitus","tieteellinen","newWiki","title","original","returnedLintu","concat","returnedHavainto","handleLajiChange","target","handleMaaraChange","handleKuntaChange","handlePaikkaChange","handleTiedotChange","handleNewUsernameChange","handleNewPasswordChange","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","handleNewUser","newUser","returnedUser","to","onSubmit","size","name","path","oldHavainto","find","h","updatedHavainto","confirm","removedHavainto","filter","bird","mywindow","open","document","write","getElementById","innerHTML","close","focus","print","ReactDOM","render"],"mappings":"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","file":"static/js/main.42779d47.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/lintudb/\";\r\nconst havaintoUrl = \"/api/lintudb/havainto\";\r\nconst lintuUrl = \"/api/lintudb/lintu\";\r\nconst userUrl = \"/api/lintudb/user\";\r\nconst wikiUrl = \"/api/wiki?haku=\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getWikiHaku = async (haku) => {\r\n  const response = await axios.get(wikiUrl + haku);\r\n  return response.data;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getHavainto = () => {\r\n  const request = axios.get(havaintoUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getLintu = () => {\r\n  const request = axios.get(lintuUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getUser = () => {\r\n  const request = axios.get(userUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst createUser = async (newObject) => {\r\n  const response = await axios.post(userUrl, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst createHavainto = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(havaintoUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst createLintu = async (newObject) => {\r\n  const response = await axios.post(lintuUrl, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst updateHavainto = (id, newObject) => {\r\n  const request = axios.put(`${havaintoUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst removeHavainto = (id) => {\r\n  const request = axios.delete(`${havaintoUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getAll,\r\n  getHavainto,\r\n  getLintu,\r\n  getUser,\r\n  createUser,\r\n  createHavainto,\r\n  createLintu,\r\n  updateHavainto,\r\n  removeHavainto,\r\n  setToken,\r\n  getWikiHaku,\r\n};\r\n","import React, { useState, useImperativeHandle } from \"react\";\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button className=\"btn\" onClick={toggleVisibility}>\r\n          Peruuta\r\n        </button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        <button className=\"btn\" onClick={toggleVisibility}>\r\n          {props.buttonLabel}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Togglable;\r\n","import React from \"react\";\r\nimport Togglable from \"./Togglable\";\r\n\r\nconst Havainto = ({\r\n  user,\r\n  changeHavainto,\r\n  havaintoList,\r\n  deleteHavainto,\r\n  printHavainto,\r\n  changedmaara,\r\n  handleUpdateMaaraChange,\r\n  changedkunta,\r\n  handleUpdateKuntaChange,\r\n  changedpaikka,\r\n  handleUpdatePaikkaChange,\r\n  changedlisatiedot,\r\n  handleUpdateTiedotChange,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"lintuOtsikko\"> Havainnot </h2>\r\n      <div className=\"havainnot\">\r\n        {havaintoList.map((havainto) => (\r\n          <li key={havainto.id} style={{ listStyleType: \"none\" }}>\r\n            <div id={havainto.id} className=\"havainto\">\r\n              <h3>Laji: {havainto.laji}</h3>\r\n              <p> Määrä: {havainto.maara}</p>\r\n              <p>\r\n                {\" \"}\r\n                Paikkakunta: {havainto.kunta} <br></br>\r\n                Paikka: {havainto.paikka}\r\n                <br></br>\r\n                Lisätiedot: {havainto.lisatiedot}\r\n              </p>\r\n              <p>Havainnoija: {havainto.user.username}</p>\r\n              <div>\r\n                {\" \"}\r\n                {user !== null ? (\r\n                  <div>\r\n                    <Togglable buttonLabel=\"Muokkaa havaintoa\">\r\n                      <div>\r\n                        <h4>Päivitä havainto</h4>\r\n                        <form className=\"changeForm\">\r\n                          <table>\r\n                            <tbody>\r\n                            <tr>\r\n                              <td>Määrä:</td>\r\n                              <td>\r\n                                <input\r\n                                  value={changedmaara}\r\n                                  onChange={handleUpdateMaaraChange}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Kunta:</td>\r\n                              <td>\r\n                                <input\r\n                                  value={changedkunta}\r\n                                  onChange={handleUpdateKuntaChange}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Paikka:</td>\r\n                              <td>\r\n                                <input\r\n                                  value={changedpaikka}\r\n                                  onChange={handleUpdatePaikkaChange}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Lisätiedot:</td>\r\n                              <td>\r\n                                <input\r\n                                  value={changedlisatiedot}\r\n                                  onChange={handleUpdateTiedotChange}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                            </tbody>\r\n                          </table>\r\n                          <br></br>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn\"\r\n                            onClick={() => changeHavainto(havainto.id)}\r\n                          >\r\n                            Tallenna\r\n                          </button>\r\n                          <button type=\"reset\" className=\"btn\">\r\n                            Tyhjennä\r\n                          </button>\r\n                        </form>\r\n                      </div>\r\n                    </Togglable>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => deleteHavainto(havainto)}\r\n                    >\r\n                      Poista havainto\r\n                    </button>\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"btn\"\r\n                      onClick={() => printHavainto(havainto.id)}\r\n                      value=\"Tulosta havainto\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Havainto;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n// eslint-disable-next-line\r\nexport default { login }","import React from \"react\";\r\n\r\nconst Linnut = ({ lintuList }) => {\r\n  const birdCard = (lintu) => (\r\n    <div className=\"lintu\">\r\n      <h3>Laji: {lintu.laji}</h3>\r\n      <p>Tieteellinen nimi: {lintu.tieteellinenNimi}</p>\r\n      <img src={lintu.kuvaWikipediastaAPI} className=\"img\" alt={lintu.laji} />\r\n      <p>\r\n        Lahko: {lintu.lahko} <br></br>\r\n        Heimo: {lintu.heimo} <br></br>\r\n        Suku: {lintu.suku}\r\n      </p>\r\n      <p>Elinvoimaisuus: {lintu.elinvoimaisuus}</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"lintutaulu\">\r\n      {lintuList.map((lintu, i) => {\r\n        return <div key={i}>{birdCard(lintu)}</div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Linnut;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, NavLink, Route } from \"react-router-dom\";\r\nimport LintuService from \"./services/LintuService\";\r\nimport Havainto from \"./components/Havainto\";\r\nimport loginService from \"./services/login\";\r\nimport Togglable from \"./components/Togglable\";\r\nimport Linnut from \"./components/Linnut\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [havaintoList, setHavaintoList] = useState([]);\r\n  const [lintuList, setLintuList] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n  const [laji, setLaji] = useState(\"\");\r\n  const [maara, setMaara] = useState(\"\");\r\n  const [kunta, setKunta] = useState(\"\");\r\n  const [paikka, setPaikka] = useState(\"\");\r\n  const [lisatiedot, setLisatiedot] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newUsername, setNewUsername] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [changedmaara, setChangedMaara] = useState(\"\");\r\n  const [changedkunta, setChangedKunta] = useState(\"\");\r\n  const [changedpaikka, setChangedPaikka] = useState(\"\");\r\n  const [changedlisatiedot, setChangedLisatiedot] = useState(\"\");\r\n  const [wikiData, setWikiData] = useState({});\r\n\r\n  useEffect(() => {\r\n    LintuService.getHavainto().then((initialHavainnot) => {\r\n      setHavaintoList(initialHavainnot);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    LintuService.getLintu().then((initialLinnut) => {\r\n      setLintuList(initialLinnut);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    LintuService.getUser().then((initialUsers) => {\r\n      setUserList(initialUsers);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\r\n      \"loggedLintupongariUser\"\r\n    );\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      LintuService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever field changes, the useEffect makes the wiki search. This way it finds the info before submitting.\r\n  // Not the ideal way, because it is done many times depending on the length of the birds name.\r\n\r\n  useEffect(() => {\r\n    if (!laji) {\r\n      console.log(\"No data yet\");\r\n    } else {\r\n      LintuService.getWikiHaku(laji)\r\n        .then((returnedData) => {\r\n          setWikiData(returnedData);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [laji]);\r\n\r\n  const addHavainto = (event) => {\r\n    event.preventDefault();\r\n    const newObject = {\r\n      laji: laji,\r\n      maara: maara,\r\n      kunta: kunta,\r\n      paikka: paikka,\r\n      lisatiedot: lisatiedot,\r\n      user: user.username,\r\n    };\r\n\r\n    if (\r\n      lintuList.some((lintu) => lintu.laji.toLowerCase() === laji.toLowerCase())\r\n    ) {\r\n      window.alert(laji + \" on jo lintutaulussa.\");\r\n    } else {\r\n      const taxonomyData =\r\n        wikiData?.[0]?.cirrusdoc?.[0].source?.auxiliary_text[0];\r\n      if (taxonomyData !== undefined) {\r\n        const lahkopalat = taxonomyData.split(\"Lahko: \");\r\n        if (lahkopalat !== undefined) {\r\n          const lahko = lahkopalat[1].split(\" \");\r\n          if (lahko[0].includes(\"linnut\")) {\r\n          const heimopalat = taxonomyData.split(\"Heimo: \");\r\n          const heimo = heimopalat[1].split(\" \");\r\n          const sukupalat = taxonomyData.split(\"Suku: \");\r\n          const suku = sukupalat[1].split(\" \");\r\n          const luokituspalat = taxonomyData.split(\"Uhanalaisuusluokitus \");\r\n          if (taxonomyData.includes(\"Uhanalaisuusluokitus\")) {\r\n            const luokitus = luokituspalat[1].split(\" \");\r\n            const tieteellisetpalat = taxonomyData.split(\"Kaksiosainen nimi \");\r\n            const tieteellinen = tieteellisetpalat[1].split(\" \");\r\n\r\n            const newWiki = {\r\n              laji: wikiData?.[0]?.title,\r\n              tieteellinenNimi: `${tieteellinen[0]} ${tieteellinen[1]}`,\r\n              kuvaWikipediastaAPI: wikiData?.[0]?.original?.source,\r\n              lahko: `${lahko[0]} ${lahko[1]}`,\r\n              heimo: `${heimo[0]} ${heimo[1]}`,\r\n              suku: `${suku[0]} ${suku[1]}`,\r\n              elinvoimaisuus: luokitus[0],\r\n            };\r\n            LintuService.createLintu(newWiki).then((returnedLintu) => {\r\n              setLintuList(lintuList.concat(returnedLintu));\r\n              setWikiData(\"\");\r\n              console.log(lintuList);\r\n            });\r\n          } else {\r\n            window.alert(\r\n              laji +\r\n                \"-lajista ei saatu täydellistä lintukorttia luotua. Luodaan silti havainto.\"\r\n            );\r\n          }\r\n        } else {\r\n          window.alert(\r\n              \"Laji ei vaikuttaisi olevan lintu.\")\r\n        }\r\n        } else {\r\n          window.alert(\r\n            laji +\r\n              \"-lajista ei saatu täydellistä lintukorttia luotua. Luodaan silti havainto.\"\r\n          );\r\n        }\r\n      } else {\r\n        window.alert(laji + \"-virheellinen laji.\");\r\n      }\r\n    }\r\n\r\n    LintuService.createHavainto(newObject).then((returnedHavainto) => {\r\n      setHavaintoList(havaintoList.concat(returnedHavainto));\r\n      setLaji(\"\");\r\n      setMaara(\"\");\r\n      setKunta(\"\");\r\n      setPaikka(\"\");\r\n      setLisatiedot(\"\");\r\n    });\r\n  };\r\n\r\n  const deleteHavainto = (havainto) => {\r\n    if (window.confirm(\"Poista \" + havainto.laji + \"?\")) {\r\n      LintuService.removeHavainto(havainto.id).then((removedHavainto) => {\r\n        setHavaintoList(havaintoList.filter((bird) => bird.id !== havainto.id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const changeHavainto = (id) => {\r\n    const oldHavainto = havaintoList.find((h) => h.id === id);\r\n    console.log(oldHavainto.laji);\r\n\r\n    const updatedHavainto = {\r\n      laji: oldHavainto.laji,\r\n      maara: changedmaara,\r\n      kunta: changedkunta,\r\n      paikka: changedpaikka,\r\n      lisatiedot: changedlisatiedot\r\n    };\r\n\r\n    console.log(`${changedmaara}, ${changedkunta}, ${changedpaikka}, ${changedlisatiedot}`)\r\n\r\n    LintuService.updateHavainto(id, updatedHavainto).then(\r\n      (returnedHavainto) => {\r\n        setHavaintoList(\r\n          havaintoList.map((h) => (h.id !== id ? h : returnedHavainto))\r\n        );\r\n        setChangedMaara(\"\");\r\n        setChangedKunta(\"\");\r\n        setChangedPaikka(\"\");\r\n        setChangedLisatiedot(\"\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const printHavainto = (havainto) => {\r\n    var mywindow = window.open(\"\", \"PRINT\", \"height=400,width=600\");\r\n    mywindow.document.write(\r\n      \"<html><head><title>\" + document.title + \"</title>\"\r\n    );\r\n    mywindow.document.write(\"</head><body >\");\r\n    mywindow.document.write(\"<h1>\" + document.title + \"</h1>\");\r\n    mywindow.document.write(document.getElementById(havainto).innerHTML);\r\n    mywindow.document.write(\"</body></html>\");\r\n    mywindow.document.close();\r\n    mywindow.focus();\r\n    mywindow.print();\r\n\r\n    return true;\r\n  };\r\n\r\n  const registerForm = () => (\r\n    <Togglable buttonLabel=\"Rekisteröidy\">\r\n      <div className=\"loginLaatikko\">\r\n        <h2>Rekisteröi käyttäjätunnus</h2>\r\n        <form onSubmit={handleNewUser}>\r\n          <label>\r\n            <p>Määritä käyttäjätunnus:</p>\r\n            <input\r\n              type=\"text\"\r\n              size=\"15\"\r\n              value={newUsername}\r\n              onChange={handleNewUsernameChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <p>Määritä salasana:</p>\r\n            <input\r\n              type=\"password\"\r\n              size=\"15\"\r\n              value={newPassword}\r\n              onChange={handleNewPasswordChange}\r\n            />\r\n          </label>\r\n          <div>\r\n            <p>\r\n              <button className=\"btn\" type=\"submit\">\r\n                Rekisteröidy\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Togglable>\r\n  );\r\n\r\n  const loginForm = () => (\r\n    <div className=\"loginLaatikko\">\r\n      <h2>Kirjaudu sisään</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <p>Käyttäjätunnus: </p>\r\n          <input\r\n            type=\"text\"\r\n            size=\"15\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>Salasana: </p>\r\n          <input\r\n            type=\"password\"\r\n            size=\"15\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <p>\r\n          <button className=\"btn\" type=\"submit\">\r\n            Kirjaudu\r\n          </button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const lintuForm = () => (\r\n    <div className=\"newSighting\">\r\n      <h4>Lisää uusi havainto:</h4>\r\n      <form onSubmit={addHavainto} className=\"lintuform\">\r\n        <div>\r\n          Laji: <input value={laji} onChange={handleLajiChange} />\r\n        </div>\r\n        <div>\r\n          Määrä: <input value={maara} onChange={handleMaaraChange} />\r\n        </div>\r\n        <div>\r\n          Kunta: <input value={kunta} onChange={handleKuntaChange} />\r\n        </div>\r\n        <div>\r\n          Paikka: <input value={paikka} onChange={handlePaikkaChange} />\r\n        </div>\r\n        <div>\r\n          Lisätiedot: <input value={lisatiedot} onChange={handleTiedotChange} />\r\n        </div>\r\n        <br></br>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Tallenna\r\n        </button>\r\n        <button className=\"btn\" type=\"reset\">\r\n          Tyhjennä\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const handleLajiChange = (event) => {\r\n    setLaji(event.target.value);\r\n  };\r\n\r\n  const handleMaaraChange = (event) => {\r\n    setMaara(event.target.value);\r\n  };\r\n\r\n  const handleKuntaChange = (event) => {\r\n    setKunta(event.target.value);\r\n  };\r\n\r\n  const handlePaikkaChange = (event) => {\r\n    setPaikka(event.target.value);\r\n  };\r\n\r\n  const handleTiedotChange = (event) => {\r\n    setLisatiedot(event.target.value);\r\n  };\r\n\r\n  const handleUpdateMaaraChange = (event) => {\r\n    setChangedMaara(event.target.value);\r\n  };\r\n\r\n  const handleUpdateKuntaChange = (event) => {\r\n    setChangedKunta(event.target.value);\r\n  };\r\n\r\n  const handleUpdatePaikkaChange = (event) => {\r\n    setChangedPaikka(event.target.value);\r\n  };\r\n\r\n  const handleUpdateTiedotChange = (event) => {\r\n    setChangedLisatiedot(event.target.value);\r\n  };\r\n\r\n  const handleNewUsernameChange = (event) => {\r\n    setNewUsername(event.target.value);\r\n  };\r\n\r\n  const handleNewPasswordChange = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      window.localStorage.setItem(\r\n        \"loggedLintupongariUser\",\r\n        JSON.stringify(user)\r\n      );\r\n\r\n      LintuService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async (event) => {\r\n    event.preventDefault();\r\n    window.localStorage.removeItem(\"loggedLintupongariUser\");\r\n    setUser(null);\r\n  };\r\n\r\n  const handleNewUser = (event) => {\r\n    event.preventDefault();\r\n    const newUser = {\r\n      username: newUsername,\r\n      password: newPassword,\r\n    };\r\n    LintuService.createUser(newUser).then((returnedUser) => {\r\n      setUserList(userList.concat(returnedUser));\r\n    });\r\n\r\n    window.alert(\"Tervetuloa \" + newUsername);\r\n    setNewUsername(\"\");\r\n    setNewPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <BrowserRouter>\r\n          <div>\r\n            <ul className=\"links\">\r\n              <li>\r\n                <NavLink to=\"/havainnot\">Havainnot</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/linnut\">Linnut</NavLink>\r\n              </li>\r\n              <h1>Lintupongari</h1>\r\n            </ul>\r\n            <div className=\"content\">\r\n              <div className=\"toggleBox\">\r\n                {user === null ? (\r\n                  loginForm()\r\n                ) : (\r\n                  <div>\r\n                    <p className=\"newSighting\">\r\n                      Logged in as: <br /> {user.username}\r\n                      <br />\r\n                      <br />\r\n                      <button className=\"btn\" onClick={handleLogout}>\r\n                        Log out\r\n                      </button>{\" \"}\r\n                    </p>\r\n                    <br />\r\n                    {lintuForm()}\r\n                  </div>\r\n                )}\r\n                <div>{user === null ? registerForm() : <div></div>}</div>\r\n              </div>\r\n              <Route path=\"/havainnot\">\r\n                <Havainto\r\n                  user={user}\r\n                  changeHavainto={changeHavainto}\r\n                  havaintoList={havaintoList}\r\n                  deleteHavainto={deleteHavainto}\r\n                  printHavainto={printHavainto}\r\n                  changedmaara={changedmaara}\r\n                  handleUpdateMaaraChange={handleUpdateMaaraChange}\r\n                  changedkunta={changedkunta}\r\n                  handleUpdateKuntaChange={handleUpdateKuntaChange}\r\n                  changedpaikka={changedpaikka}\r\n                  handleUpdatePaikkaChange={handleUpdatePaikkaChange}\r\n                  changedlisatiedot={changedlisatiedot}\r\n                  handleUpdateTiedotChange={handleUpdateTiedotChange}\r\n                />\r\n              </Route>\r\n              <Route path=\"/linnut\">\r\n                <h2 className=\"lintuOtsikko\"> Lintutaulu </h2>\r\n                <Linnut lintuList={lintuList} />\r\n              </Route>\r\n            </div>\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}